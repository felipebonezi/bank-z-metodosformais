A conta do cliente - seja ela individual ou conjunta - é formada por um conjunto de movimentações. Essas
movimentações serão responsáveis por gerar o saldo da conta do cliente a partir do tipo de movimentação,
ou seja, tipo crédito ou débito. 

\begin{zed}
  [ Nome, Movimentacao ]
\end{zed}

\begin{zed}
  TipoMovimentacao ::= CREDITO | DEBITO
\end{zed}

Além disso, a conta do cliente terá um identificador para informar qual a modalidade da conta, ou seja,
se a conta é do tipo "conta corrente" ou "conta poupança". Dessa forma, o sistema poderá tratar os casos
em que as operações de saque, pagamentos e afins irão - ou não - modificar ambos os saldos.

\begin{zed}
  TipoConta ::= CORRENTE | POUPANCA
\end{zed}

A conta pode ser de baixa automática ou de baixa manual. A primeira dá a possibilidade de haver 
uma transição automática, da poupança para a conta corrente, caso o saldo da conta seja menor do que o débito
que o usuário esteja tentando fazer naquele momento. A segunda opção não possibilita transição automática, 
caso o saldo da conta corrente seja menor do que a do débito, que o usuário está tentando fazer no momento.

\begin{zed}
  Modalidade ::= BAIXA_AUTOMATICA | BAIXA_MANUAL
\end{zed}

Note que uma conta poderá conter um cliente como dependente. Nesse caso, nosso schema de conta do cliente
deverá conter uma única entidade identificando tal cliente que estará contido na lista de clientes 
cadastrados no sistema.

\begin{schema}{ContaCorrente}
	tipo!: TipoConta\\
	movimentacoes: \power Movimentacao\\
	saldo: \power Movimentacao \pfun N\\
\where
	tipo! = CORRENTE\\
	saldo = \forall m: \power Movimentacao @ (c = \emptyset \implies saldo(c) = 0) 
							^ (c \neq \emptyset \implies \exists n:c @ f(c) = n.valor + f(c \setminus \{n\})\\
\end{schema}

\begin{schema}{ContaPoupanca}
	tipo!: TipoConta\\
	movimentacoes: \power Movimentacao\\
	saldo: \power Movimentacao \pfun N\\
\where
	tipo! = POUPANCA\\
	saldo = \forall m: \power Movimentacao @ (c = \emptyset \implies saldo(c) = 0) 
							\land (c \neq \emptyset \implies \exists n:c @ f(c) = n.valor + f(c \setminus \{n\})\\
\end{schema}

\begin{schema}{Conta}
	cc: ContaCorrente\\
	cp: ContaPoupanca\\
	modalidade: Modalidade\\
	titular: Cliente\\
	dependente: Cliente\\
\end{schema}

\begin{schema}{Movimentacao}
	tm: TipoMovimentacao\\
	valor: \nat
\where
	valor >= 0
\end{schema}

\begin{schema}{Cliente}
	nomeDoCliente: Nome\\
\end{schema}

\begin{schema}{Gerente}
	nome: Nome\\
\end{schema}

\begin{schema}{Banco}
	contas: Gerente \pfun Conta\\
\end{schema}
